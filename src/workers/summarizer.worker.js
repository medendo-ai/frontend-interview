// Basit worker testi
console.log('Worker is loading...');

// Worker initialization
self.onmessage = async (event) => {
  const { type, payload } = event.data;
  console.log('Worker received message:', type, payload);

  if (type === 'load') {
    // Test message back to main thread
    self.postMessage({
      type: 'status',
      status: 'ready',
      message: 'Test worker is ready',
    });
  } else if (type === 'ping') {
    // Simple ping test
    self.postMessage({
      type: 'pong',
      message: 'Worker is alive',
    });
  } else if (type === 'summarize') {
    // Fake summarization
    self.postMessage({ type: 'generating', isGenerating: true });

    // Simulate processing time
    await new Promise((resolve) => setTimeout(resolve, 2000));

    // Fake result
    self.postMessage({
      type: 'result',
      summary:
        'This is a test summary generated by the worker. I need to remember: ' +
        payload.text.substring(0, 50),
      isGenerating: false,
    });
  }
};
